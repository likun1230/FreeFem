load "msh3" 
load "tetgen"

real R = 3, r=1; 
real h = 0.2; // 
int nx = R*2*pi/h;
int ny = r*2*pi/h;
func torex= (R+r*cos(y*pi*2))*cos(x*pi*2);
func torey= (R+r*cos(y*pi*2))*sin(x*pi*2);
func torez= r*sin(y*pi*2);


meshS ThS=square3(nx,ny,[torex,torey,torez],removeduplicate=true) ;
cout << "test" << ThS.nv << " " <<ThS.nt << " " << ThS.nbe << endl;
mesh3 Th3=tetg(ThS,switch="paAAQYY"); //,nbofregions=1,regionlist=domain);

plot(Th3);

fespace VhS(ThS,P1);
VhS u,v;
macro grad3(u) [dx(u),dy(u),dz(u)]  // EOM

solve Lap(u,v) = int2d(ThS)( u*v+grad3(u)'*grad3(v)) -int2d(ThS)((x+y)*v);

plot(u,wait=1,nbiso=20,fill=1);
savemesh(ThS, "totoS.mesh");
real uP=u(4.,0.,0.);

VhS uex = cos(x) * cosh(y) + sin(x) * sinh(y);
//VhS vn = (1 - x) * uex(0,1,0) + x * uex(1,1,0);    pb with find
