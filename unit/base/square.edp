include "test.idp"

cout << functionDEFINITION << "square" << endl;
real t;

cout << typeDEFINITION << "int" << endl;

int i = 4;
real ineg = -4;

t = clock();
real resi1 = square(i);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(resi1 == 16);

t = clock();
real resineg = square(ineg);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(resineg == 16);

cout << typeDEFINITION << "real" << endl;

real r = 4.0;
real rneg = -4.0;

t = clock();
real resr1 = square(r);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(resr1 == 16.0);

t = clock();
real resrneg = square(rneg);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(resrneg == 16.0);

cout << typeDEFINITION << "complex" << endl;

complex c = 4 + 2i;
complex cneg = -4 + 2i;

t = clock();
complex rescint = square(c);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(rescint == 12.0 + 16i);

t = clock();
complex rescneg = square(cneg);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(rescneg == 12.0 - 16i);

cout << typeDEFINITION << "real[int]" << endl;

real[int] u(5), v(5);

for[i, vi:v]
	vi = i;

t = clock();
u = square(v);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(u[0] == 0 && u[1] == 1 && u[2] == 4 && u[3] == 9 && u[4] == 16);

cout << typeDEFINITION << "complex[int]" << endl;

complex[int] w(2), s(2);

w = [1 + 1i, 2 + 3i];

t = clock();
s = square(w);
t = clock() - t;
cout << timeELAPSED << t << endl;
test(s[0] == 2i && s[1] == -5 + 12i);
