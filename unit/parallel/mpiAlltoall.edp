//NBPROC 4
include "test.idp"

if (!mpirank) cout << functionDEFINITION << "mpiAlltoall" << endl;

real t;
mpiComm cc;

if (!mpirank) cout << typeDEFINITION << "int[int]" << endl;

int[int] a(mpisize), b(mpisize);
a[mpirank] = mpirank;

t = mpiWtime();
mpiAlltoall(a, b);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(b[mpirank] == mpirank);

t = mpiWtime();
mpiAlltoall(a, b, cc);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(b[mpirank] == mpirank);

if (!mpirank) cout << typeDEFINITION << "real[int]" << endl;

real[int] c(mpisize), e(mpisize);
c[mpirank] = mpirank;

t = mpiWtime();
mpiAlltoall(c, e);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(e[mpirank] == mpirank);

t = mpiWtime();
mpiAlltoall(c, e, cc);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(e[mpirank] == mpirank);

if (!mpirank) cout << typeDEFINITION << "complex[int]" << endl;

complex[int] f(mpisize), g(mpisize);
f[mpirank] = mpirank;

t = mpiWtime();
mpiAlltoall(f, g);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(g[mpirank] == mpirank);

t = mpiWtime();
mpiAlltoall(f, g, cc);
t = mpiWtime() - t;
if (!mpirank) cout << timeELAPSED << t << endl;
test(g[mpirank] == mpirank);
