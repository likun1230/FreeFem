include "test.idp"
load "Element_QF"
load "msh3"

cout << functionDEFINITION << "Element_QF" << endl;

real t;
mesh3 Th = cube(5, 5, 5);

cout << parameterDEFINITION << "FEQF1" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF1);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF2" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF2);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF5" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF5);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF7" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF7);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF9" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF9);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF" << endl;
{
  mesh Th2 = square(5, 5);
  fespace Uh1(Th2, FEQF);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF13d" << endl;
{
  fespace Uh1(Th, FEQF13d);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF23d" << endl;
{
  fespace Uh1(Th, FEQF23d);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF53d" << endl;
{
  fespace Uh1(Th, FEQF53d);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}

cout << parameterDEFINITION << "FEQF3d" << endl;
{
  fespace Uh1(Th, FEQF3d);
  Uh1 u1;
  Uh1 u2;
  Uh1 err1;

  u1 = 0;
  t = clock();
  u2 = dx(u1);
  t = clock() - t;
  cout << timeELAPSED << t << endl;
  err1 = abs(u2 - u1);
  test(err1[].linfty < HWERROR);
}
